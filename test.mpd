resource test()
	
	import Mandelbrot;

	const int NUM_VERSIONS = 4;

	procedure assertIntArrayEquals (IntegerArray ia1, IntegerArray ia2, string[*] versionName) returns bool b
	{
		b = false;

		if(ub(ia1^) != ub(ia2^)) 
		{ 
			printf("%s - Erreur : les tableaux de sont pas de même longueur.\n", versionName);
			return; 
		}

		for [i = 1 to ub(ia1^)]
		{
			if(ia1^[i] != ia2^[i]) 
			{
				printf("%s - Erreur : valeurs différentes.\n", versionName);
				return; 
			}
		} 
		printf("%s - Succès.\n", versionName);
		b = true;	
	}
	
	const int width = 400;
	const int height = 300;
	const int pixelsNumber = width * height;

	const Complex center = complex(-.7, 0);
	const Complex span = complex(2.7, -(4.0 / 3.0) * 2.7 * height / width);
	const Complex beginning = complex(center^.realPart - span^.realPart / 2, center^.imaginaryPart - span^.imaginaryPart / 2);
	const Complex ending = complex(center^.realPart + span^.realPart / 2, center^.imaginaryPart + span^.imaginaryPart / 2);
	
	ComplexArray complexes;
	IntegerArray sequentialIterations, iterations;

	[NUM_VERSIONS]bool resultat;

	write("Assignation du plan.");
	complexes = assignateComplexArray(width, height, beginning, span);
	
	write("Calcul des valeurs séquentielles");
	sequentialIterations = mandelbrotSequential(complexes);

	write("Calcul des valeurs PIF puis comparaison.");
	resultat[1] = assertIntArrayEquals(sequentialIterations, mandelbrotPIF(complexes), "PIF");

	write("Calcul des valeurs PIGA puis comparaison.");
	resultat[2] = assertIntArrayEquals(sequentialIterations, mandelbrotPIGA(complexes), "PIGA");
	
	write("Calcul des valeurs PIGC puis comparaison.");
	resultat[3] = assertIntArrayEquals(sequentialIterations, mandelbrotPIGC(complexes), "PIGC");

	write("Calcul des valeurs PST puis comparaison.");
	resultat[4] = assertIntArrayEquals(sequentialIterations, mandelbrotPST(complexes), "PST");
	
	bool allOk = true;
	
	for [i = 1 to NUM_VERSIONS ]
	{ if (resultat[i] == false) { allOk = false; } }
	
	if(allOk) { write("Tous les tests sont remplis avec succès."); }
	else { write("Erreur : un ou plusieurs tests ont échoué."); }
	
end