body Mandelbrot

	proc complex(realPart, imaginaryPart) returns c
	{	
		c = new(ComplexRec);
		c^.realPart = realPart;
		c^.imaginaryPart = imaginaryPart;
	}

	proc absolute (complex) returns r
	{
		r = sqrt( complex^.realPart**2 + complex^.imaginaryPart**2);
	}

	proc mandelbrotIterate (complexArg, maxIterations) returns i
	{
		Complex tmpComplex = complex(complexArg^.realPart, complexArg^.imaginaryPart);

		for[n = 0 to maxIterations]
		{
			i = n;
			if(absolute(tmpComplex) >= 2.0) {return;}
			
			real realPart = tmpComplex^.realPart**2 - tmpComplex^.imaginaryPart**2 + complexArg^.realPart;
			tmpComplex^.imaginaryPart = (tmpComplex^.realPart * tmpComplex^.imaginaryPart) * 2 + complexArg^.imaginaryPart;
			tmpComplex^.realPart = realPart;
		}
	}

end
